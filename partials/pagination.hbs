{{!-- pagenation.hbs --}}
<nav
    class="pagination"
    role="navigation"
    data-current-page="{{page}}"
    data-total-pages="{{pages}}"
>
    <div class="pagination-nav">
        {{#if prev}}
            <a class="newer-posts" href="{{page_url prev}}"><</a>
        {{else}}
            <span class="newer-posts-placeholder"><</span>
        {{/if}}
        <div class="pagination-list"></div>
        {{#if next}}
            <a class="older-posts" href="{{page_url next}}">></a>
        {{else}}
            <span class="older-posts-placeholder">></span>
        {{/if}}
    </div>
</nav>

<script>

document.addEventListener('DOMContentLoaded', function () {
    // ページネーション要素を取得
    const paginationNav = document.querySelector('.pagination');
    if (!paginationNav) return;

    // 現在のページ番号 / 合計ページ数 を data 属性から取得
    const currentPage = parseInt(paginationNav.getAttribute('data-current-page'), 10) || 1;
    const totalPages  = parseInt(paginationNav.getAttribute('data-total-pages'), 10) || 1;

    // 1. 前後2ページ分を基本とする (合計5ページ)
    const PAGE_WINDOW = 2; // 現在ページの前後2ページ
    let start = currentPage - PAGE_WINDOW;
    let end   = currentPage + PAGE_WINDOW;

    // 2. start が 1未満のときは、そのぶん end を右へシフト
    if (start < 1) {
        // シフト量 (例: start=0 → shift=1 で end+=1)
        const shift = 1 - start;
        end += shift;
        start = 1;
    }

    // 3. end が totalPages を超えるときは、そのぶん start を左へシフト
    if (end > totalPages) {
        const shift = end - totalPages;
        start -= shift;
        end = totalPages;
        if (start < 1) {
            start = 1;
        }
    }

    const paginationList = paginationNav.querySelector('.pagination-list');
    if (!paginationList) return;
    // 4. 最終的に start～end でループしてジャンプボタンを生成
    for (let i = start; i <= end; i++) {
        const a = document.createElement('a');
        a.classList.add('arcat-pegenation-jump');
        a.textContent = i;
        a.href = buildPageUrl(i);

        // 現在ページのボタンはクリック無効化＆スタイル調整
        if (i === currentPage) {
            a.classList.add('current-page');
            a.addEventListener('click', function (evt) {
                evt.preventDefault();
            });
        }
        // paginationList の末尾に追加
        paginationList.appendChild(a);
    }

    /**
     * ページ番号に応じたURLを生成 (必要に応じて修正)
     * Ghostのデフォルト仕様:
     *  - 1ページ目の場合 -> /posts/
     *  - 2ページ目以降  -> /posts/page/:number/
     */
    function buildPageUrl(pageNum) {
        if (pageNum === 1) {
            return '/posts/';
        } else {
            return `/posts/page/${pageNum}/`;
        }
    }
});
</script>